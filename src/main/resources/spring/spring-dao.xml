<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:default.properties"/>

    <!--1.配置DataSource，采用alibaba的Druid,关于Druid与c3p0、dbcp、bonecp数据库连接池对比可以参见
    https://github.com/alibaba/druid/wiki/%E5%90%84%E7%A7%8D%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BF%9E%E6%8E%A5%E6%B1%A0%E5%AF%B9%E6%AF%94
    Druid GitHub仓库地址https://github.com/alibaba/druid-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc_url}"/>
        <property name="username" value="${jdbc_user}"/>
        <property name="password" value="${jdbc_password}"/>
        <property name="driverClassName" value="${jdbc_driver}"/>

        <property name="filters" value="stat"/>

        <property name="maxActive" value="20"/>
        <property name="initialSize" value="1"/>
        <property name="maxWait" value="60000"/>
        <property name="minIdle" value="1"/>

        <!--<property name="timeBetweenEvictionRunsMillis" value="60000" />-->
        <!--<property name="minEvictableIdleTimeMillis" value="300000" />-->

        <!--<property name="testWhileIdle" value="true" />-->
        <!--<property name="testOnBorrow" value="false" />-->
        <!--<property name="testOnReturn" value="false" />-->

        <!--<property name="poolPreparedStatements" value="true" />-->
        <!--<property name="maxOpenPreparedStatements" value="20" />-->
    </bean>

    <!--2.配置SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <!--mybatis全局config文件所在位置-->
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>

        <!--配置mapper所在位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>

        <!--扫描entity包，使用别名-->
        <property name="typeAliasesPackage" value="com.keven.kmall.entity"/>
    </bean>

    <!--3.配置mapper dao层接口扫描,实现动态实现dao层接口，注入到spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.keven.kmall.dao"/>
    </bean>


    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"
          p:maxWaitMillis="${redis_maxWaitMillis}"
          p:maxIdle="${redis_maxIdle}"
          p:minIdle="${redis_minIdle}"
          p:testOnBorrow="${redis_testOnBorrow}"
    />

    <!--配置redisconnector-->
    <bean id="jedisFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
          p:hostName="${redis_server}"
          p:port="${redis_port}"
          p:usePool="true"
          p:poolConfig-ref="poolConfig"
    />

    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate"
          p:connectionFactory-ref="jedisFactory"/>



</beans>